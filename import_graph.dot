digraph "import_graph" {
  "Mathlib.Data.One.Defs" [shape=ellipse];
  "Mathlib.Tactic.ToAdditive" -> "Mathlib.Data.One.Defs";
  "Mathlib.Data.Array.Defs" [style=filled, fillcolor="#e0e0e0", shape=ellipse];
  "Mathlib.Init" -> "Mathlib.Data.Array.Defs";
  "Mathlib.Tactic.Linter.DocPrime" [style=filled, fillcolor="#e0e0e0", shape=ellipse];
  "Mathlib.Tactic.Linter.Header" -> "Mathlib.Tactic.Linter.DocPrime";
  "Mathlib.Tactic.Linter.Lint" [style=filled, fillcolor="#e0e0e0", shape=ellipse];
  "Mathlib.Tactic.DeclarationNames" -> "Mathlib.Tactic.Linter.Lint";
  "Mathlib.Tactic.Lemma" [style=filled, fillcolor="#e0e0e0", shape=ellipse];
  "Mathlib.Init" -> "Mathlib.Tactic.Lemma";
  "Mathlib.Data.Nat.BinaryRec" [shape=ellipse];
  "Mathlib.Init" -> "Mathlib.Data.Nat.BinaryRec";
  "Mathlib.Tactic.ToAdditive.Frontend" [style=filled, fillcolor="#e0e0e0", shape=ellipse];
  "Mathlib.Data.Nat.Notation" -> "Mathlib.Tactic.ToAdditive.Frontend";
  "Mathlib.Data.String.Defs" -> "Mathlib.Tactic.ToAdditive.Frontend";
  "Mathlib.Data.Array.Defs" -> "Mathlib.Tactic.ToAdditive.Frontend";
  "Mathlib.Lean.Expr.ReplaceRec" -> "Mathlib.Tactic.ToAdditive.Frontend";
  "Mathlib.Lean.EnvExtension" -> "Mathlib.Tactic.ToAdditive.Frontend";
  "Mathlib.Lean.Meta.Simp" -> "Mathlib.Tactic.ToAdditive.Frontend";
  "Mathlib.Lean.Name" -> "Mathlib.Tactic.ToAdditive.Frontend";
  "Mathlib.Tactic.Eqns" -> "Mathlib.Tactic.ToAdditive.Frontend";
  "Mathlib.Tactic.Simps.Basic" -> "Mathlib.Tactic.ToAdditive.Frontend";
  "Mathlib.Tactic.DeclarationNames" [style=filled, fillcolor="#e0e0e0", shape=ellipse];
  "Mathlib.Tactic.Linter.Header" -> "Mathlib.Tactic.DeclarationNames";
  "Mathlib.Tactic.TypeStar" [style=filled, fillcolor="#e0e0e0", shape=ellipse];
  "Mathlib.Init" -> "Mathlib.Tactic.TypeStar";
  "Mathlib.Tactic.Linter.Header" [style=filled, fillcolor="#e0e0e0", shape=ellipse];
  "Mathlib.Tactic.Attr.Register" [style=filled, fillcolor="#e0e0e0", shape=ellipse];
  "Mathlib.Init" -> "Mathlib.Tactic.Attr.Register";
  "Mathlib.Lean.Name" [style=filled, fillcolor="#e0e0e0", shape=ellipse];
  "Mathlib.Init" -> "Mathlib.Lean.Name";
  "Mathlib.Data.Nat.Notation" [style=filled, fillcolor="#e0e0e0", shape=ellipse];
  "Mathlib.Init" -> "Mathlib.Data.Nat.Notation";
  "Mathlib.Data.String.Defs" [style=filled, fillcolor="#e0e0e0", shape=ellipse];
  "Mathlib.Init" -> "Mathlib.Data.String.Defs";
  "Mathlib.Lean.Expr.ReplaceRec" [style=filled, fillcolor="#e0e0e0", shape=ellipse];
  "Mathlib.Util.MemoFix" -> "Mathlib.Lean.Expr.ReplaceRec";
  "Mathlib.Tactic.Linter.OldObtain" [style=filled, fillcolor="#e0e0e0", shape=ellipse];
  "Mathlib.Tactic.Linter.Header" -> "Mathlib.Tactic.Linter.OldObtain";
  "Mathlib.Tactic.Linter.HashCommandLinter" [style=filled, fillcolor="#e0e0e0", shape=ellipse];
  "Mathlib.Tactic.Linter.Header" -> "Mathlib.Tactic.Linter.HashCommandLinter";
  "Mathlib.Tactic.Linter.GlobalAttributeIn" [style=filled, fillcolor="#e0e0e0", shape=ellipse];
  "Mathlib.Tactic.Linter.Header" -> "Mathlib.Tactic.Linter.GlobalAttributeIn";
  "Mathlib.Tactic.Simps.NotationClass" [style=filled, fillcolor="#e0e0e0", shape=ellipse];
  "Mathlib.Init" -> "Mathlib.Tactic.Simps.NotationClass";
  "Mathlib.Tactic.OfNat" [style=filled, fillcolor="#e0e0e0", shape=ellipse];
  "Mathlib.Init" -> "Mathlib.Tactic.OfNat";
  "Mathlib.Tactic.Linter.RefineLinter" [style=filled, fillcolor="#e0e0e0", shape=ellipse];
  "Mathlib.Tactic.Linter.Header" -> "Mathlib.Tactic.Linter.RefineLinter";
  "Mathlib.Algebra.Group.Operations" [shape=ellipse];
  "Mathlib.Tactic.Lemma" -> "Mathlib.Algebra.Group.Operations";
  "Mathlib.Tactic.TypeStar" -> "Mathlib.Algebra.Group.Operations";
  "Mathlib.Tactic.ToAdditive" -> "Mathlib.Algebra.Group.Operations";
  "Mathlib.Util.AssertExists" -> "Mathlib.Algebra.Group.Operations";
  "Mathlib.Logic.Function.Defs" [shape=ellipse];
  "Mathlib.Tactic.AdaptationNote" -> "Mathlib.Logic.Function.Defs";
  "Mathlib.Tactic.Attr.Register" -> "Mathlib.Logic.Function.Defs";
  "Mathlib.Tactic.Lemma" -> "Mathlib.Logic.Function.Defs";
  "Mathlib.Tactic.Eqns" -> "Mathlib.Logic.Function.Defs";
  "Mathlib.Tactic.TypeStar" -> "Mathlib.Logic.Function.Defs";
  "Mathlib.Algebra.Group.Defs" [shape=house];
  "Mathlib.Data.Int.Notation" -> "Mathlib.Algebra.Group.Defs";
  "Mathlib.Data.Nat.BinaryRec" -> "Mathlib.Algebra.Group.Defs";
  "Mathlib.Data.One.Defs" -> "Mathlib.Algebra.Group.Defs";
  "Mathlib.Algebra.Group.Operations" -> "Mathlib.Algebra.Group.Defs";
  "Mathlib.Logic.Function.Defs" -> "Mathlib.Algebra.Group.Defs";
  "Mathlib.Tactic.OfNat" -> "Mathlib.Algebra.Group.Defs";
  "Mathlib.Tactic.ToAdditive" [style=filled, fillcolor="#e0e0e0", shape=ellipse];
  "Mathlib.Tactic.ToAdditive.Frontend" -> "Mathlib.Tactic.ToAdditive";
  "Mathlib.Tactic.Simps.Basic" [style=filled, fillcolor="#e0e0e0", shape=ellipse];
  "Mathlib.Tactic.Simps.NotationClass" -> "Mathlib.Tactic.Simps.Basic";
  "Mathlib.Lean.Expr.Basic" -> "Mathlib.Tactic.Simps.Basic";
  "Mathlib.Tactic.Linter.UnusedTactic" [style=filled, fillcolor="#e0e0e0", shape=ellipse];
  "Mathlib.Tactic.Linter.Header" -> "Mathlib.Tactic.Linter.UnusedTactic";
  "Mathlib.Init" [style=filled, fillcolor="#e0e0e0", shape=ellipse];
  "Mathlib.Tactic.Linter.DocPrime" -> "Mathlib.Init";
  "Mathlib.Tactic.Linter.GlobalAttributeIn" -> "Mathlib.Init";
  "Mathlib.Tactic.Linter.HashCommandLinter" -> "Mathlib.Init";
  "Mathlib.Tactic.Linter.Lint" -> "Mathlib.Init";
  "Mathlib.Tactic.Linter.Multigoal" -> "Mathlib.Init";
  "Mathlib.Tactic.Linter.OldObtain" -> "Mathlib.Init";
  "Mathlib.Tactic.Linter.RefineLinter" -> "Mathlib.Init";
  "Mathlib.Tactic.Linter.UnusedTactic" -> "Mathlib.Init";
  "Mathlib.Tactic.Linter.Style" -> "Mathlib.Init";
  "Mathlib.Lean.Expr.Basic" [style=filled, fillcolor="#e0e0e0", shape=ellipse];
  "Mathlib.Init" -> "Mathlib.Lean.Expr.Basic";
  "Mathlib.Tactic.Linter.Style" [style=filled, fillcolor="#e0e0e0", shape=ellipse];
  "Mathlib.Tactic.Linter.Header" -> "Mathlib.Tactic.Linter.Style";
  "Mathlib.Tactic.Eqns" [style=filled, fillcolor="#e0e0e0", shape=ellipse];
  "Mathlib.Init" -> "Mathlib.Tactic.Eqns";
  "Mathlib.Util.AssertExists" [style=filled, fillcolor="#e0e0e0", shape=ellipse];
  "Mathlib.Util.AssertExistsExt" -> "Mathlib.Util.AssertExists";
  "Mathlib.Util.AssertExistsExt" [style=filled, fillcolor="#e0e0e0", shape=ellipse];
  "Mathlib.Init" -> "Mathlib.Util.AssertExistsExt";
  "Mathlib.Lean.EnvExtension" [style=filled, fillcolor="#e0e0e0", shape=ellipse];
  "Mathlib.Init" -> "Mathlib.Lean.EnvExtension";
  "Mathlib.Lean.Meta.Simp" [style=filled, fillcolor="#e0e0e0", shape=ellipse];
  "Mathlib.Init" -> "Mathlib.Lean.Meta.Simp";
  "Mathlib.Data.Int.Notation" [style=filled, fillcolor="#e0e0e0", shape=ellipse];
  "Mathlib.Init" -> "Mathlib.Data.Int.Notation";
  "Mathlib.Tactic.AdaptationNote" [style=filled, fillcolor="#e0e0e0", shape=ellipse];
  "Mathlib.Init" -> "Mathlib.Tactic.AdaptationNote";
  "Mathlib.Tactic.Linter.Multigoal" [style=filled, fillcolor="#e0e0e0", shape=ellipse];
  "Mathlib.Tactic.Linter.Header" -> "Mathlib.Tactic.Linter.Multigoal";
  "Mathlib.Util.MemoFix" [style=filled, fillcolor="#e0e0e0", shape=ellipse];
  "Mathlib.Init" -> "Mathlib.Util.MemoFix";
}